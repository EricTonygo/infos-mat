<?php

namespace NNGenie\ExploitationBundle\Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 * Polyvalence
 *
 * @ORM\Table(name="polyvalence")
 * @ORM\Entity
 */
class Polyvalence
{
    /**
     * @var integer
     *
     * @ORM\Column(name="id", type="integer", nullable=false)
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="IDENTITY")
     */
    private $id;

    /**
     * @var string
     *
     * @ORM\Column(name="qualification", type="string", length=45, nullable=true)
     */
    private $qualification;

    /**
     * @var string
     *
     * @ORM\Column(name="genre", type="string", length=45, nullable=true)
     */
    private $genre;

    /**
     * @var string
     *
     * @ORM\Column(name="specialisation", type="string", length=45, nullable=true)
     */
    private $specialisation;

    
    /**
     * @var integer
     *
     * @ORM\Column(name="statut", type="integer", nullable=true)
     */
    private $statut;
    
    /**
     * @var \Doctrine\Common\Collections\Collection
     *
     * @ORM\ManyToMany(targetEntity="Personnel", mappedBy="polyvalence")
     */
    private $personnel;

    /**
     * Constructor
     */
    public function __construct()
    {
        $this->personnel = new \Doctrine\Common\Collections\ArrayCollection();
        $this->statut = 1;
    }


    /**
     * Get id
     *
     * @return integer 
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set qualification
     *
     * @param string $qualification
     * @return Polyvalence
     */
    public function setQualification($qualification)
    {
        $this->qualification = $qualification;

        return $this;
    }

    /**
     * Get qualification
     *
     * @return string 
     */
    public function getQualification()
    {
        return $this->qualification;
    }
    
    
    /**
     * Set statut
     *
     * @param integer $statut
     * @return Polyvalence
     */
    public function setStatut($statut)
    {
        $this->statut = $statut;

        return $this;
    }

    /**
     * Get statut
     *
     * @return integer 
     */
    public function getStatut()
    {
        return $this->statut;
    }

    /**
     * Set genre
     *
     * @param string $genre
     * @return Polyvalence
     */
    public function setGenre($genre)
    {
        $this->genre = $genre;

        return $this;
    }

    /**
     * Get genre
     *
     * @return string 
     */
    public function getGenre()
    {
        return $this->genre;
    }

    /**
     * Set specialisation
     *
     * @param string $specialisation
     * @return Polyvalence
     */
    public function setSpecialisation($specialisation)
    {
        $this->specialisation = $specialisation;

        return $this;
    }

    /**
     * Get specialisation
     *
     * @return string 
     */
    public function getSpecialisation()
    {
        return $this->specialisation;
    }

    /**
     * Add personnel
     *
     * @param \NNGenie\ExploitationBundle\Entity\Personnel $personnel
     * @return Polyvalence
     */
    public function addPersonnel(\NNGenie\ExploitationBundle\Entity\Personnel $personnel)
    {
        $this->personnel[] = $personnel;

        return $this;
    }

    /**
     * Remove personnel
     *
     * @param \NNGenie\ExploitationBundle\Entity\Personnel $personnel
     */
    public function removePersonnel(\NNGenie\ExploitationBundle\Entity\Personnel $personnel)
    {
        $this->personnel->removeElement($personnel);
    }

    /**
     * Get personnel
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getPersonnel()
    {
        return $this->personnel;
    }
}
