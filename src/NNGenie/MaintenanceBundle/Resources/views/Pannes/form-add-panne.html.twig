{% extends 'NNGenieMaintenanceBundle::layout.html.twig' %}

{% block title %}GMTRAV - Pieces{% endblock %}

{% block stylesheets %}
    {{parent()}}
    <link href="{{ asset('bundles/nngenieinfosmat/vendors/iCheck/skins/flat/green.css') }}" rel="stylesheet">
    <link href="{{ asset('bundles/nngenieinfosmat/vendors/datatables.net-bs/css/dataTables.bootstrap.min.css') }}" rel="stylesheet">
    <link href="{{ asset('bundles/nngenieinfosmat/vendors/datatables.net-buttons-bs/css/buttons.bootstrap.min.css') }}" rel="stylesheet">
    <link href="{{ asset('bundles/nngenieinfosmat/vendors/datatables.net-responsive-bs/css/responsive.bootstrap.min.css') }}" rel="stylesheet">		

{% endblock %}

{% block content %}
    <div class="right_col" role="main">

        <div class="">
            <div class="page-title">
                <div class="title_left">
                    <h3>
                        AJOUT D'UNE PANNE
                    </h3>
                </div>

            </div>
            <div class="clearfix"></div>

            <div class="row">
                <div class="col-md-12 col-sm-12 col-xs-12">
                    <div class="x_panel">
                        <div class="x_title">
                            <h2>Informations sur la panne</h2>
                            <div class="clearfix"></div>
                        </div>
                        <div class="x_content">
                            {{ render_flash_alerts() }}
                            <form class="form-horizontal form-label-left" method="POST" action="{{ path('nn_genie_maintenance_panne_new') }}">

                                <div class="item form-group">
                                    {{ form_label(form.nom, "Nom", {'label_attr': {'class': 'control-label col-md-3 col-sm-3 col-xs-12'}}) }}
                                    {{ form_errors(form.nom) }}

                                    <div class="col-md-6 col-sm-6 col-xs-12 form-group has-feedback">
                                        {{ form_widget(form.nom, {'attr': {'class': 'form-control col-md-7 col-xs-12', 'required':'required'}}) }}
                                    </div>
                                </div>
                                <div class="item form-group">
                                    {{ form_label(form.type, "Type ", {'label_attr': {'class': 'control-label col-md-3 col-sm-3 col-xs-12'}}) }}
                                    {{ form_errors(form.type) }}

                                    <div class="col-md-6 col-sm-6 col-xs-12 form-group has-feedback">
                                        {{ form_widget(form.type, {'attr': {'class': 'form-control col-md-7 col-xs-12', 'required':'required'}}) }}
                                    </div>
                                </div>
                                <div class="item form-group">
                                    {{ form_label(form.actions, "Actions ", {'label_attr': {'class': 'control-label col-md-3 col-sm-3 col-xs-12'}}) }}
                                    {{ form_errors(form.actions) }}

                                    <div class="col-md-6 col-sm-6 col-xs-12 form-group has-feedback">
                                        {{ form_widget(form.actions, {'attr': {'class': 'form-control col-md-7 col-xs-12', 'required':'required'}}) }}
                                    </div>
                                </div>
                                <div class="item form-group">
                                    {{ form_label(form.causeseventuelles, "Causes éventuelles ", {'label_attr': {'class': 'control-label col-md-3 col-sm-3 col-xs-12'}}) }}
                                    {{ form_errors(form.causeseventuelles) }}

                                    <div class="col-md-6 col-sm-6 col-xs-12 form-group has-feedback">
                                        {{ form_widget(form.causeseventuelles, {'attr': {'class': 'form-control col-md-7 col-xs-12', 'required':'required'}}) }}
                                    </div>
                                </div>    
                                <div class="item form-group">
                                    <h3>Pièces</h3>
                                    <table class="table table-striped table-bordered">
                                        <thead>
                                            <tr>
                                                <th>Nom</th>
                                                <th>Type</th>
                                                <th>Action</th>
                                            </tr>
                                        </thead>
                                        <tbody class="pieces" data-prototype="{{ form_widget(form.pieces.vars.prototype)|e('html_attr') }}">
                                            
                                        </tbody>
                                    </table>
                                </div>
                                <div class="form-group">
                                    {{ form_rest(form)}}
                                </div>
                                <div class="ln_solid"></div>
                                <div class="form-group">
                                    <div class="col-md-6 col-md-offset-3">
                                        <input type="reset" class="btn btn-primary" value="Annuler"/>
                                        <input type="submit" class="btn btn-success" value="Valider"/>
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>  
            </div>
        </div>
    </div>
{% endblock %}
{% block javascripts %}
    {{parent()}}
    <script src="{{ asset('bundles/nngenieinfosmat/vendors/validator/validator.min.js') }}"></script>

    <script>
        // initialize the validator function
        validator.message.date = 'not a real date';

        // validate a field on "blur" event, a 'select' on 'change' event & a '.reuired' classed multifield on 'keyup':
        $('form')
                .on('blur', 'input[required], input.optional, select.required', validator.checkField)
                .on('change', 'select.required', validator.checkField)
                .on('keypress', 'input[required][pattern]', validator.keypress);

        $('.multi.required').on('keyup blur', 'input', function () {
            validator.checkField.apply($(this).siblings().last()[0]);
        });

        /*$('form').submit(function (e) {
         e.preventDefault();
         var submit = true;
         
         // evaluate the form using generic validaing
         if (!validator.checkAll($(this))) {
         submit = false;
         }
         
         if (submit)
         this.submit();
         
         return false;
         });*/
        function addPieceForm($collectionHolder, $newLinkTr) {
            // Get the data-prototype explained earlier
            var prototype = $collectionHolder.data('prototype');

            // get the new index
            var index = $collectionHolder.data('index');

            // Replace '__name__' in the prototype's HTML to
            // instead be a number based on how many items we have
            var newForm = prototype.replace(/__name__/g, index);

            // increase the index with one for the next item
            $collectionHolder.data('index', index + 1);

            // Display the form in the page in an li, before the "Add a piece" link li
            var $newFormTr = $('<tr></tr>').append(newForm);
            $newLinkTr.before($newFormTr);

            addPieceFormDeleteLink($newFormTr);
        }
        
        function addPieceFormDeleteLink($pieceFormTr) {
            var $removeFormA = $('<td><a href="#">delete</a></td>');
            $pieceFormTr.append($removeFormA);

            $removeFormA.on('click', function (e) {
                // prevent the link from creating a "#" on the URL
                e.preventDefault();

                // remove the li for the piece form
                $pieceFormTr.remove();
            });
        }

        var $collectionHolder;

        // setup an "add a piece" link
        var $addPieceLink = $('<a class="btn btn-success" href="#" class="add_piece_link">Add a pièce</a>');
        var $newLinkTr = $('<tr></tr>').append($addPieceLink);

        jQuery(document).ready(function () {
            /******** suppression des pieces *********/
            // Get the ul that holds the collection of pieces
            $collectionHolder = $('tbody.pieces');

            // add a delete link to all of the existing piece form li elements
            $collectionHolder.find('tr').each(function () {
                addPieceFormDeleteLink($(this));
            });
            
            
            /******** Ajout des pieces *********/

            // Get the ul that holds the collection of pieces
            $collectionHolder = $('tbody.pieces');

            // add the "add a piece" anchor and li to the pieces ul
            $collectionHolder.append($newLinkTr);

            // count the current form inputs we have (e.g. 2), use that as the new
            // index when inserting a new item (e.g. 2)
            $collectionHolder.data('index', $collectionHolder.find(':input').length);

            $addPieceLink.on('click', function (e) {
                // prevent the link from creating a "#" on the URL
                e.preventDefault();

                // add a new piece form (see next code block)
                addPieceForm($collectionHolder, $newLinkTr);
            });
        });
    </script>
{% endblock %}
